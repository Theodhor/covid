{"version":3,"sources":["components/Title.js","components/SearchBar.js","components/Breadcrumb.js","components/table/TableHead.js","components/Country.js","components/table/TableBody.js","components/table/Table.js","components/Time.js","components/article/Article.js","components/SingleShow.js","components/Countries.js","App.js","index.js"],"names":["Title","className","SearchBar","props","state","countries","searchInput","loading","display","handleInput","bind","searchRef","React","createRef","e","target","value","length","this","re","RegExp","filter","country","match","setState","current","handleCountry","ref","onChange","type","placeholder","map","index","key","onClick","handleSubmit","Component","Breadcrumb","selectors","World","single","handleWorld","Europe","handleContinents","Asia","North","Africa","South","Oceania","TableHead","orderByCountry","orderByInput","Country","adjustNumber","entry","reverse","join","split","refineNumber","middle","toString","includes","slice","cases","active","new","total","deaths","tests","TableBody","data","Table","Time","BrakeTime","time","months","displayTime","parseInt","Article","dataKeys","Object","keys","dataValues","values","description","charAt","toUpperCase","SingleShow","Countries","continents","scrollRef","scrollUp","handleSingleCountry","deconstructResponse","scrollTop","scrollLeft","sort","a","b","localeCompare","index1","index2","contArray","forEach","continent","elements","element","push","world","day","toChange","resetSelectors","handleAmerica","find","App","axios","then","response","catch","error","console","log","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.8b828233.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return(\n    <section className=\"hero is-primary is-bold\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <h1 className=\"title has-text-centered cantarell\">\n            Live COVID-19 stastics and updates\n          </h1>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Title;\n","import React from 'react';\n\nclass SearchBar extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = { countries: [], searchInput: null, loading: false, display: false };\n    this.handleInput = this.handleInput.bind(this);\n    this.searchRef = React.createRef();\n  }\n\n  handleInput(e){\n    const display = e.target.value.length > 0 ? true : false;\n    const loading = e.target.value ? true : false;\n    let countries = this.props.countries;\n    const re = new RegExp(e.target.value,'i');\n    countries = countries.filter(country => country.country.match(re) !== null);\n    this.setState({ searchInput: e.target.value, loading, display, countries});\n  }\n\n  handleSubmit(country){\n    this.searchRef.current.value = '';\n    this.props.handleCountry(country);\n    this.setState({\n      searchInput : '',\n      loading: false,\n      display: false,\n      countries: []\n    })\n  }\n\n  render(){\n    return(\n      <div className='container'>\n        <div className='field'>\n          <div className='control'>\n            <input ref={this.searchRef} className='input' onChange={this.handleInput} type='text' placeholder='Search country'/>\n          </div>\n        </div>\n        {this.state.display && this.state.countries ? this.state.countries.map((country,index) =>\n          <a className='roboto search-span is-size-7-mobile is-size-6-tablet' key={index} onClick={() => this.handleSubmit(country)}>{country.country} </a>\n        )\n        :\n          <div></div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default SearchBar;\n","import React from 'react';\n\nconst Breadcrumb = (props) =>{\n  return(\n    <nav className='breadcrumb has-bullet-separator is-centered is-size-7-mobile is-size-7-tablet is-size-6-desktop back-white sticky'>\n      <ul>\n        <li className={props.selectors.World && !props.single ? 'is-active' : ''}>\n          <a className='roboto' onClick={props.handleWorld}>World</a>\n        </li>\n        <li className={props.selectors.Europe && !props.single ? 'is-active' : ''}>\n          <a className='roboto' onClick={() => props.handleContinents('Europe')}>Europe </a>\n        </li>\n        <li className={props.selectors.Asia && !props.single ? 'is-active' : ''}>\n          <a className='roboto' onClick={() => props.handleContinents('Asia')}>Asia </a>\n        </li>\n        <li className={props.selectors.North && !props.single ? 'is-active' : ''}>\n          <a className='roboto' onClick={() => props.handleContinents('North-America')}>N.America </a>\n        </li>\n        <li className={props.selectors.Africa && !props.single ? 'is-active' : ''}>\n          <a className='roboto' onClick={() => props.handleContinents('Africa')}>Africa </a>\n        </li>\n        <li className={props.selectors.South && !props.single ? 'is-active' : ''}>\n          <a className='roboto' onClick={() => props.handleContinents('South-America')}>S.America </a>\n        </li>\n        <li className={props.selectors.Oceania && !props.single ? 'is-active' : ''}>\n          <a className='roboto' onClick={() => props.handleContinents('Oceania')}>Oceania </a>\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default Breadcrumb;\n","import React from 'react';\n\nconst TableHead = (props) => {\n  return(\n    <thead>\n      <tr>\n        <th className='roboto sticky back-white-table' onClick={props.orderByCountry}><a>Country</a></th>\n        <th className='has-text-right roboto sticky back-white-table' onClick={() => props.orderByInput('cases','active')}><a>Active cases</a></th>\n        <th className='has-text-right roboto sticky back-white-table' onClick={() => props.orderByInput('cases', 'new')}><a>New cases</a></th>\n        <th className='has-text-right roboto sticky back-white-table' onClick={() => props.orderByInput('cases', 'total')}><a>Total cases</a></th>\n        <th className='has-text-right roboto sticky back-white-table' onClick={() => props.orderByInput('deaths', 'total')}><a>Total deaths</a></th>\n        <th className='has-text-right roboto sticky back-white-table' onClick={() => props.orderByInput('deaths', 'new')}><a>New deaths</a></th>\n        <th className='has-text-right roboto sticky back-white-table' onClick={() => props.orderByInput('tests', 'total')}><a>Tests</a></th>\n      </tr>\n    </thead>\n  )\n}\n\nexport default TableHead;\n","import React from 'react';\n\nconst Country = (props) => {\n\n  const adjustNumber = (entry) => {\n    return entry.reverse().join('').match(/.{1,3}/g).join('.').split('').reverse().join('');\n  }\n\n\n\n  const refineNumber = (entry) => {\n    if(entry) {\n      let middle = entry.toString().split('');\n\n      if(middle.includes('+')) {\n        return '+' + adjustNumber(middle.slice(1))}\n      return adjustNumber(middle);\n    }\n    return '-';\n  }\n\n  return(\n    <tr>\n      <th className='roboto light-font'><a onClick={() => props.handleCountry(props.country)} >{props.country.country}</a></th>\n      <th className='has-text-right roboto light-font'>{refineNumber(props.country.cases.active)}</th>\n      <th className='has-text-right roboto light-font'>{refineNumber(props.country.cases.new)}</th>\n      <th className='has-text-right roboto light-font'>{refineNumber(props.country.cases.total)}</th>\n      <th className='has-text-right roboto light-font'>{refineNumber(props.country.deaths.total)}</th>\n      <th className='has-text-right roboto light-font'>{refineNumber(props.country.deaths.new)}</th>\n      <th className='has-text-right roboto light-font'>{refineNumber(props.country.tests.total)}</th>\n    </tr>\n  )\n}\n\nexport default Country;\n","import React from 'react';\nimport Country from '../Country';\n\nconst TableBody = (props) => {\n  return(\n    <tbody>\n      {props.data.map(country =>\n          <Country country={country} key={country.country} handleCountry={props.handleCountry}/>\n      )}\n    </tbody>\n  )\n}\n\nexport default TableBody;\n","import React from 'react';\nimport TableHead from './TableHead';\nimport TableBody from './TableBody';\n\nconst Table = (props) => {\n\n  return(\n    <div className='container'>\n      <table className='table is-hoverable is-striped is-fullwidth is-size-7-mobile'>\n        <TableHead orderByCountry={props.orderByCountry} orderByInput={props.orderByInput}/>\n        <TableBody data={props.data} handleCountry={props.handleCountry}/>\n      </table>\n    </div>\n  )\n}\n\nexport default Table;\n","import React from 'react';\n\nconst Time = (props) => {\n\n  let BrakeTime = props.time.split('-');\n\n  const months = [\n    'Jannuary',\n    'Febbruary',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n  ]\n\n  const GiveMonth = (entry) => {\n    return months[parseInt(entry)];\n  }\n\n  const displayTime = 'Last updated on ' + BrakeTime[2] + ' ' + GiveMonth(BrakeTime[1]) + ' ' + BrakeTime[0] + '  6:00 GMT';\n\n  return(\n    <div className='container roboto centralized'>\n      {displayTime}\n    </div>\n  )\n}\n\nexport default Time;\n","import React from 'react';\n\nconst Article = (props) => {\n\n\n\n  const dataKeys = Object.keys(props.data);\n  const dataValues = Object.values(props.data);\n\n  const refineString = (entry) => {\n    if(entry === '1M_pop') entry = 'every 1M people';\n    if(entry === 'new') entry = 'last 24 hours'\n    return entry.charAt(0).toUpperCase() + entry.slice(1);\n  }\n\n  const adjustNumber = (entry) => {\n    return entry.reverse().join('').match(/.{1,3}/g).join('.').split('').reverse().join('');\n  }\n\n\n\n  const refineNumber = (entry) => {\n    if(entry) {\n      let middle = entry.toString().split('');\n\n      if(middle.includes('+')) {\n        return '+' + adjustNumber(middle.slice(1))}\n      return adjustNumber(middle);\n    }\n    return '-';\n  }\n\n  return(\n    <article className={`message ${props.description === 'Cases' ? 'is-primary'\n      : props.description === 'Deaths' ? 'is-danger' : 'is-link'}`}>\n      <div className='message-header centralized is-size-6-mobile is-size-5-tablet is-size-4-desktop'>{props.description}</div>\n      <div className='message-body'>\n\n\n        <table className='table is-striped is-full-width is-hoverable'>\n          <tbody>\n            {dataKeys.map((key,index) =>\n              <tr key={index}>\n                <th>\n                  <p className='roboto article-element is-size-7-mobile is-size-6-tablet is-size-5-desktop'> {refineString(key)} </p>\n                </th>\n                <th>\n                  <p className='roboto article-element is-size-7-mobile is-size-6-tablet is-size-5-desktop'>\n                    {(dataValues.length === 3 && index === 1) || index === 4 ? dataValues[index] : refineNumber(dataValues[index])}\n                  </p>\n                </th>\n              </tr>\n            )}\n          </tbody>\n        </table>\n\n        {/* <div className='columns justify-around is-mobile'>\n          <div className='column is-5-desktop '>\n            {dataKeys.map( (info,index) =>\n              <p className='roboto article-element' key={index}> {refineString(info)} </p>\n            )}\n          </div>\n          <div className='column is-5-desktop '>\n            {dataValues.map((info,index) =>\n              <p className='roboto article-element' key={index}> {(dataValues.length === 3 && index === 1) || index === 4 ? info : refineNumber(info)} </p>\n            )}\n          </div>\n        </div> */}\n      </div>\n    </article>\n  )\n}\n\nexport default Article;\n","import React from 'react';\nimport Article from './article/Article.js';\n\nconst SingleShow = (props) => {\n  return(\n    <div className='container'>\n      <div className='title container roboto has-text-centered is-size-6-mobile is-size-5-tablet is-size-3-desktop'>\n        {`Latest updates and stats of ${props.country.country}`}\n      </div>\n      <div className='container mb-4'>\n        <Article data={props.country.cases} description='Cases'></Article>\n      </div>\n      <div className='container mb-4'>\n        <Article data={props.country.deaths} description='Deaths'></Article>\n      </div>\n      <div className='container mb-4'>\n        <Article data={props.country.tests} description='Tests'></Article>\n      </div>\n    </div>\n\n  )\n  }\n\nexport default SingleShow;\n","import React from 'react';\nimport SearchBar from './SearchBar';\nimport Breadcrumb from './Breadcrumb';\nimport Table from './table/Table';\nimport Time from './Time';\nimport SingleShow from './SingleShow';\n\nclass Countries extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      data: [],\n      continents: [],\n      selectors: {\n        World: true,\n        Asia: false,\n        Europe: false,\n        North: false,\n        South: false,\n        Africa: false,\n        Oceania: false\n      },\n      time: null,\n      single: false,\n      display: {}};\n    this.scrollRef = React.createRef();\n    this.orderByCountry = this.orderByCountry.bind(this);\n    this.orderByInput = this.orderByInput.bind(this);\n    this.handleContinents = this.handleContinents.bind(this);\n    this.handleWorld = this.handleWorld.bind(this);\n    this.scrollUp = this.scrollUp.bind(this);\n    this.handleSingleCountry = this.handleSingleCountry.bind(this);\n  }\n\n  componentDidMount(){\n    this.deconstructResponse();\n  }\n\n  handleSingleCountry(country){\n    this.setState({ single: true, display: country});\n  }\n\n  handleAmerica(entry){\n    if(entry === 'North-America') return 'North'\n    else if(entry === 'South-America') return 'South';\n    return entry;\n  }\n\n  scrollUp(){\n    this.scrollRef.current.scrollTop = 0;\n    this.scrollRef.current.scrollLeft = 0;\n  }\n\n  resetSelectors(){\n    const middle = {\n      World: false,\n      Asia: false,\n      Europe: false,\n      North: false,\n      South: false,\n      Africa: false,\n      Oceania: false\n    };\n    return middle;\n  }\n\n  orderByCountry(){\n    const middle = this.state.data;\n    middle.sort((a, b) => a.country.localeCompare(b.country));\n    this.setState({ data: middle});\n  }\n\n  orderByInput(index1, index2){\n    const middle = this.state.data.sort(\n      (a,b) => b[index1][index2] - a[index1][index2]\n    );\n    this.setState({ data: middle});\n  }\n\n  deconstructResponse(){\n    const contArray = ['Europe','North-America','South-America','Asia','Africa','Oceania'];\n    const continents = [ ];\n    contArray.forEach((continent,index) => {\n      const entry = { };\n      entry.continent = continent;\n      const elements = this.props.data.filter(element => element.continent === continent && element.country !== continent);\n      entry.countries = elements;\n      continents.push(entry);\n\n    })\n    const world = this.props.data.filter(element => element.country === 'All');\n    contArray.push('All');\n    const countries = this.props.data.filter(element => !contArray.includes(element.country));\n\n    this.setState({continents, world, countries, data: countries, time: world[0].day});\n  }\n\n  handleContinents(entry){\n    this.scrollUp();\n    const toChange = this.resetSelectors();\n    const selected = this.handleAmerica(entry);\n    toChange[selected] = true;\n    const continent = this.state.continents.find(continent => continent.continent === entry);\n    this.setState({ data: continent.countries, selectors: toChange, single: false});\n  }\n\n  handleWorld(){\n    this.scrollUp();\n    const middle = this.state.countries;\n    const selectors= this.resetSelectors();\n    selectors.World = true;\n    this.setState({ data: middle, selectors, single: false});\n  }\n\n  render(){\n    return(\n      <div className='section'>\n\n        <div className='columns is-multiline is-centered is-vcentered sticky back-white-search'>\n          <div className='column is-one-quarter'>\n            {this.state.time ?\n              <Time time={this.state.time} />\n              :\n              <div></div>\n            }\n          </div>\n          <div className='column is-half'>\n            <SearchBar\n              countries={this.state.countries}\n              handleCountry={this.handleSingleCountry}\n             />\n          </div>\n          <div className='column is-10'>\n            <div className='container'>\n              <Breadcrumb\n                handleContinents={this.handleContinents}\n                handleWorld={this.handleWorld}\n                selectors={this.state.selectors}\n                single={this.state.single}/>\n            </div>\n          </div>\n        </div>\n\n        <div className='columns is-centered'>\n          <div className='column is-10'>\n            <div ref={this.scrollRef} className='container is-overflowed-x'>\n              {this.state.single ?\n                <SingleShow country={this.state.display}/>\n                :\n                <Table\n                  data={this.state.data}\n                  orderByInput={this.orderByInput}\n                  orderByCountry={this.orderByCountry}\n                  handleCountry={this.handleSingleCountry}\n                />\n              }\n            </div>\n          </div>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default Countries;\n","import React from 'react';\nimport bulma from 'bulma';\nimport axios from 'axios';\nimport Title from './components/Title';\nimport Countries from './components/Countries';\n\nclass App extends React.Component {\n\n  constructor(){\n    super();\n    this.state = { data: []};\n  }\n\n  componentDidMount(){\n    axios({\n    \"method\":\"GET\",\n    \"url\":\"https://covid-193.p.rapidapi.com/statistics\",\n    \"headers\":{\n    \"content-type\":\"application/octet-stream\",\n    \"x-rapidapi-host\":\"covid-193.p.rapidapi.com\",\n    \"x-rapidapi-key\":\"5f0cfd44acmshb90e276d7bc11d3p130ab5jsn01caf7f45f20\",\n    \"useQueryString\":true\n    }\n    })\n    .then((response)=>{\n      this.setState({ data: response.data.response });\n    })\n    .catch((error)=>{\n      console.log(error)\n    })\n  }\n\n  render(){\n    return(\n      <div>\n        <Title/>\n        {this.state.data.length > 0 ?\n          <Countries data={this.state.data} />\n          :\n          <div></div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}